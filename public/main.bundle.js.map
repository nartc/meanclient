{"version":3,"sources":["D:/Codes/meanclient/angular/src async","D:/Codes/meanclient/angular/src/app/app.component.css","D:/Codes/meanclient/angular/src/app/app.component.html","D:/Codes/meanclient/angular/src/app/app.component.ts","D:/Codes/meanclient/angular/src/app/app.module.ts","D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.css","D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.html","D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.ts","D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.css","D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.html","D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.ts","D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.css","D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.html","D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.ts","D:/Codes/meanclient/angular/src/app/components/clients/clients.component.css","D:/Codes/meanclient/angular/src/app/components/clients/clients.component.html","D:/Codes/meanclient/angular/src/app/components/clients/clients.component.ts","D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.css","D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.html","D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.ts","D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.css","D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.html","D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.ts","D:/Codes/meanclient/angular/src/app/components/login/login.component.css","D:/Codes/meanclient/angular/src/app/components/login/login.component.html","D:/Codes/meanclient/angular/src/app/components/login/login.component.ts","D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.css","D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.html","D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.ts","D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.css","D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.html","D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.ts","D:/Codes/meanclient/angular/src/app/components/register/register.component.css","D:/Codes/meanclient/angular/src/app/components/register/register.component.html","D:/Codes/meanclient/angular/src/app/components/register/register.component.ts","D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.css","D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.html","D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.ts","D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.css","D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.html","D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.ts","D:/Codes/meanclient/angular/src/app/guards/auth.guard.ts","D:/Codes/meanclient/angular/src/app/services/auth.service.ts","D:/Codes/meanclient/angular/src/app/services/client.service.ts","D:/Codes/meanclient/angular/src/app/services/http.service.ts","D:/Codes/meanclient/angular/src/app/services/local-storage.service.ts","D:/Codes/meanclient/angular/src/environments/environment.ts","D:/Codes/meanclient/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n    <flash-messages></flash-messages>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router'; \r\nimport { HttpModule } from '@angular/http';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\n\r\n//PrimeNG Imports\r\nimport { FileUploadModule, \r\n         InputTextModule,\r\n         InputMaskModule,\r\n         PanelModule,\r\n         ButtonModule,\r\n         MessagesModule,\r\n         GrowlModule,\r\n         MenuModule,\r\n         DataTableModule,\r\n         SharedModule,\r\n         ConfirmDialogModule, ConfirmationService,\r\n         SplitButtonModule\r\n       } from 'primeng/primeng';\r\n\r\n//Component Imports\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ClientsComponent } from './components/clients/clients.component';\r\nimport { ClientDetailComponent } from './components/client-detail/client-detail.component';\r\nimport { UploadClientComponent } from './components/upload-client/upload-client.component';\r\nimport { AddClientComponent } from './components/add-client/add-client.component';\r\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\n\r\n//Service Imports\r\nimport { AuthService } from './services/auth.service';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\nimport { HttpService } from './services/http.service';\r\nimport { ClientService } from './services/client.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: DashboardComponent, canActivate: [AuthGuard]},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'upload', component: UploadClientComponent, canActivate: [AuthGuard]},\r\n  {path: 'add', component: AddClientComponent, canActivate: [AuthGuard]},\r\n  {path: 'client/:id', component: ClientDetailComponent, canActivate: [AuthGuard]},\r\n  {path: 'edit/:id', component: EditClientComponent, canActivate: [AuthGuard]},\r\n  {path: 'password', component: ChangePasswordComponent, canActivate: [AuthGuard]},\r\n  {path: '**', component: PageNotFoundComponent}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    DashboardComponent,\r\n    ClientsComponent,\r\n    ClientDetailComponent,\r\n    UploadClientComponent,\r\n    AddClientComponent,\r\n    EditClientComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    SidebarComponent,\r\n    ChangePasswordComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlashMessagesModule,\r\n    FileUploadModule,\r\n    InputTextModule,\r\n    InputMaskModule,\r\n    PanelModule,\r\n    ButtonModule,\r\n    MessagesModule,\r\n    GrowlModule,\r\n    MenuModule,\r\n    DataTableModule,\r\n    SharedModule,\r\n    ConfirmDialogModule,\r\n    SplitButtonModule\r\n  ],\r\n  providers: [\r\n    AuthService, \r\n    LocalStorageService, \r\n    HttpService, \r\n    ClientService,\r\n    ConfirmationService,\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"::ng-deep .ui-messages {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.css\n// module id = ../../../../../src/app/components/add-client/add-client.component.css\n// module chunks = 1","module.exports = \"  <div class=\\\"ui-grid-row\\\">\\r\\n    <div class=\\\"ui-grid-col-6\\\">\\r\\n      <button pButton type=\\\"button\\\" class=\\\"ui-button-info\\\" label=\\\"Back To Dashboard\\\" icon=\\\"fa-arrow-circle-o-left\\\" iconPos=\\\"left\\\" (click)=\\\"onClick()\\\"></button>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-col-6\\\">\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n<br>\\r\\n\\r\\n<p-growl [value]=\\\"addClientMessages\\\" styleClass=\\\"addClientGrowl\\\"></p-growl>\\r\\n<form \\r\\n  [formGroup]=\\\"clientForm\\\"\\r\\n  (ngSubmit)=\\\"onAddSubmit(clientForm.value)\\\"\\r\\n>\\r\\n  <p-panel header=\\\"Add Client\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          First Name *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input \\r\\n            pInputText\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"firstName\\\"\\r\\n            placeholder=\\\"Required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div \\r\\n            class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n            *ngIf=\\\"!clientForm.controls['firstName'].valid && clientForm.controls['firstName'].dirty\\\" \\r\\n          >\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"clientForm.controls['firstName'].errors['required']\\\">This field is required</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Last Name *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input \\r\\n            pInputText\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"lastName\\\"\\r\\n            placeholder=\\\"Required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div \\r\\n            class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n            *ngIf=\\\"!clientForm.controls['lastName'].valid && clientForm.controls['lastName'].dirty\\\" \\r\\n          >\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"clientForm.controls['lastName'].errors['required']\\\">This field is required</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Phone *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <p-inputMask \\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"phone\\\"\\r\\n            placeholder=\\\"999-999-9999\\\"\\r\\n            mask=\\\"999-999-9999\\\"\\r\\n          >\\r\\n          </p-inputMask>\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div \\r\\n            class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n            *ngIf=\\\"!clientForm.controls['phone'].valid && clientForm.controls['phone'].dirty\\\" \\r\\n          >\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"clientForm.controls['phone'].errors['required']\\\">This field is required</span>\\r\\n            <span *ngIf=\\\"clientForm.controls['phone'].errors['pattern']\\\">Please enter a valid phone number</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Email *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input \\r\\n            pInputText\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"email\\\"\\r\\n            placeholder=\\\"Required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div \\r\\n            class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n            *ngIf=\\\"!clientForm.controls['email'].valid && clientForm.controls['email'].dirty\\\" \\r\\n          >\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"clientForm.controls['email'].errors['required']\\\">This field is required</span>\\r\\n            <span *ngIf=\\\"clientForm.controls['email'].errors['pattern']\\\">Please enter a valid email</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Balance *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input \\r\\n            pInputText\\r\\n            type=\\\"number\\\"\\r\\n            formControlName=\\\"balance\\\"\\r\\n            placeholder=\\\"required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div \\r\\n            class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n            *ngIf=\\\"!clientForm.controls['balance'].valid && clientForm.controls['firstName'].dirty\\\" \\r\\n          >\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"clientForm.controls['balance'].errors['required']\\\">This field is required</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\"></div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n            <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!clientForm.valid\\\"></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </p-panel>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.html\n// module id = ../../../../../src/app/components/add-client/add-client.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Validators,FormControl,FormGroup,FormBuilder } from '@angular/forms';\r\nimport { Client } from '../../models/client';\r\nimport { Message } from 'primeng/primeng';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ClientService } from '../../services/client.service';\r\n\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './add-client.component.html',\r\n  styleUrls: ['./add-client.component.css']\r\n})\r\nexport class AddClientComponent implements OnInit {\r\n  \r\n  public client: Client;\r\n  public clientForm: FormGroup;\r\n  public addClientMessages: Array<Message> = [];\r\n  public emailRegex: string = \"[^ @]*@[^ @]*\";\r\n  public phoneRegex: string = \"[1-9]{3}-[0-9]{3}-[0-9]{4}\";\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public fB: FormBuilder,\r\n    public  flashMessagesService: FlashMessagesService,\r\n    public clientService: ClientService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.clientForm = this.fB.group({\r\n      'firstName': new FormControl('', Validators.required),\r\n      'lastName': new FormControl('', Validators.required),\r\n      'phone': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(this.phoneRegex)\r\n      ])),\r\n      'email': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(this.emailRegex)\r\n      ])),\r\n      'balance': new FormControl(0, Validators.required)\r\n    });\r\n    \r\n  }\r\n\r\n  onAddSubmit(value) {\r\n    this.client = value;\r\n    this.clientService.addClient(this.client).subscribe(\r\n      (data: any): void => {\r\n        if(data.success) {\r\n          this.flashMessagesService.show(\r\n            'New Client Added',\r\n            {\r\n              cssClass: 'ui-messages-info',\r\n              timeout: 3000\r\n            }\r\n          );\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.addClientMessages = [];\r\n          this.addClientMessages.push({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: 'Failed to add new client'\r\n          });\r\n          this.router.navigate(['/add']);\r\n        }\r\n      },\r\n      (err: Error): void => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  onClick() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/add-client/add-client.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"::ng-deep .ui-messages {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: 3px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.css\n// module id = ../../../../../src/app/components/change-password/change-password.component.css\n// module chunks = 1","module.exports = \"<p-growl [(value)]=\\\"changePasswordMsgs\\\" styleClass=\\\"changePasswordGrowl\\\"></p-growl>\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" key=\\\"confirmChangePassword\\\"></p-confirmDialog>\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" acceptLabel=\\\"OK\\\" [rejectVisible]=\\\"false\\\" key=\\\"confirmSuccessPassword\\\"></p-confirmDialog>\\r\\n\\r\\n<div class=\\\"ui-grid-row\\\">\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    <button pButton type=\\\"button\\\" class=\\\"ui-button-info\\\" label=\\\"Back To Dashboard\\\" icon=\\\"fa-arrow-circle-o-left\\\" iconPos=\\\"left\\\" (click)=\\\"onClick()\\\"></button>\\r\\n  </div>\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<form\\r\\n*ngIf=\\\"user\\\"\\r\\n[formGroup]=\\\"changePasswordForm\\\"\\r\\n(ngSubmit)=\\\"onChangeSubmit(changePasswordForm.value)\\\"\\r\\n>\\r\\n<p-panel header=\\\"Change Password\\\">\\r\\n  <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Current Password *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"password\\\"\\r\\n          formControlName=\\\"candidatePassword\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!changePasswordForm.controls['candidatePassword'].valid && changePasswordForm.controls['candidatePassword'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['candidatePassword'].errors['required']\\\">This field is required</span>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['candidatePassword'].errors['minlength']\\\">Must be at least 6 characters</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        New Password *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"password\\\"\\r\\n          formControlName=\\\"newPassword\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!changePasswordForm.controls['newPassword'].valid && changePasswordForm.controls['newPassword'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['newPassword'].errors['required']\\\">This field is required</span>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['newPassword'].errors['minlength']\\\">Must be at least 6 characters</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Confirm Password *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"password\\\"\\r\\n          formControlName=\\\"confirmNewPassword\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!changePasswordForm.controls['confirmNewPassword'].valid && changePasswordForm.controls['confirmNewPassword'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['confirmNewPassword'].errors['required']\\\">This field is required</span>\\r\\n          <span *ngIf=\\\"changePasswordForm.controls['confirmNewPassword'].errors['minlength']\\\">Must be at least 6 characters</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\"></div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n          <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!changePasswordForm.valid\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</p-panel>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.html\n// module id = ../../../../../src/app/components/change-password/change-password.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'; \r\nimport { User } from '../../models/user';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Validators,FormControl,FormGroup,FormBuilder } from '@angular/forms';\r\nimport { Message, ConfirmationService } from 'primeng/primeng';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  \r\n  public changePasswordForm: FormGroup\r\n  public candidatePassword: string;\r\n  public newPassword: string;\r\n  public confirmNewPassword: string;\r\n  public changePasswordMsgs: Array<Message>;\r\n\r\n  public user: User;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public fB: FormBuilder,\r\n    public authService: AuthService,\r\n    public flashMessagesService: FlashMessagesService,\r\n    public confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile().subscribe(\r\n      (profile: any): void => {\r\n        this.user = profile.user;\r\n      }\r\n    );\r\n\r\n    this.changePasswordForm = this.fB.group({\r\n      'candidatePassword': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])),\r\n      'newPassword': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])),\r\n      'confirmNewPassword': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])),\r\n    });\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  onChangeSubmit(value) {\r\n    if(value.newPassword == value.confirmNewPassword) {\r\n      if(value.newPassword != value.candidatePassword) {\r\n        this.confirmationService.confirm({\r\n          message: 'Are you sure to change password?',\r\n          key: \"confirmChangePassword\",\r\n          accept: () => {\r\n            this.authService.changePassword(this.user, value.candidatePassword, value.newPassword).subscribe(\r\n              (data: any): void => {\r\n                console.log(data);\r\n                if (data.success) {\r\n                  this.confirmationService.confirm({\r\n                    message: 'Password Successfully Changed',\r\n                    key: \"confirmSuccessPassword\",\r\n                    accept: () => {\r\n                      this.router.navigate(['/']);\r\n                    }\r\n                  });\r\n                } else {\r\n                  console.log(data.msg);\r\n                  this.changePasswordMsgs = [];\r\n                  this.changePasswordMsgs.push({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: data.msg\r\n                  })\r\n                  this.router.navigate(['/password']);\r\n                }\r\n              });\r\n          }\r\n        });\r\n           \r\n      } else {\r\n        this.changePasswordMsgs = [];\r\n        this.changePasswordMsgs.push({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'New Password must be different than Current Password'\r\n        });\r\n        this.router.navigate(['/password']);\r\n      } \r\n    } else {\r\n      this.changePasswordMsgs = [];\r\n      this.changePasswordMsgs.push({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        detail: 'Confirm New Password must match New Password'\r\n      });\r\n      this.router.navigate(['/password']);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/change-password/change-password.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.css\n// module id = ../../../../../src/app/components/client-detail/client-detail.component.css\n// module chunks = 1","module.exports = \"<!--Confirmation Dialog -->\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\"></p-confirmDialog>\\r\\n\\r\\n<div class=\\\"ui-grid-row\\\">\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    <button pButton type=\\\"button\\\" class=\\\"ui-button-info\\\" label=\\\"Back To Dashboard\\\" icon=\\\"fa-arrow-circle-o-left\\\" iconPos=\\\"left\\\" (click)=\\\"onClick()\\\"></button>\\r\\n  </div>\\r\\n  <div class=\\\"ui-grid-col-6 ui-rtl\\\" dir=\\\"rtl\\\">\\r\\n    <p-splitButton label=\\\"Manage\\\" [model]=\\\"buttonItems\\\" styleClass=\\\"ui-button-secondary\\\" menuStyleClass=\\\"clientDetailSplitBtnMenu\\\"></p-splitButton>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<div *ngIf=\\\"client\\\">\\r\\n  <p-panel styleClass=\\\"editClientPanel\\\">\\r\\n    <p-header>\\r\\n      <h3 class=\\\"ui-panel-title\\\" style=\\\"display:inline-block;margin-top:10px\\\">{{client.firstName}} {{client.lastName}}</h3>\\r\\n    </p-header>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-8 ui-sm-12\\\">\\r\\n        <h4 style=\\\"margin-top: 10px\\\">Client ID: {{id}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4 ui-sm-12\\\">\\r\\n        <h3 class=\\\"pull-right\\\">\\r\\n          Balance: \\r\\n          <span\\r\\n            [class.text-danger]=\\\"hasBalance\\\"\\r\\n            [class.text-success]=\\\"!hasBalance\\\"\\r\\n          >\\r\\n            {{client.balance | currency:'USD':true}}\\r\\n          </span>\\r\\n          <small>\\r\\n            <button pButton type=\\\"button\\\" class=\\\"ui-button-secondary\\\" icon=\\\"fa-pencil\\\" (click)=\\\"showEditBalanceInput = !showEditBalanceInput\\\"></button>\\r\\n          </small>\\r\\n        </h3>\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <form *ngIf=\\\"showEditBalanceInput\\\" (submit)=\\\"updateBalance()\\\" class=\\\"form-inline pull-right\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input pInputText type=\\\"number\\\" name=\\\"balance\\\" [(ngModel)]=\\\"client.balance\\\">\\r\\n            </div>\\r\\n            <button pButton type=\\\"submit\\\" icon=\\\"fa-check\\\" style=\\\"margin-left: 5px\\\"></button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">Contact Email: {{client.email}}</li>\\r\\n      <li class=\\\"list-group-item\\\">Contact Phone: {{client.phone}}</li>\\r\\n    </ul>\\r\\n    <p-footer></p-footer>\\r\\n  </p-panel>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.html\n// module id = ../../../../../src/app/components/client-detail/client-detail.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MenuItem, ConfirmationService } from 'primeng/primeng';\r\nimport { ClientService } from '../../services/client.service';\r\nimport { Client } from '../../models/client';\r\nimport { FlashMessagesService} from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-detail',\r\n  templateUrl: './client-detail.component.html',\r\n  styleUrls: ['./client-detail.component.css']\r\n})\r\nexport class ClientDetailComponent implements OnInit {\r\n  \r\n  public buttonItems: Array<MenuItem> = [];\r\n  public id: string = '';\r\n  public client: Client;\r\n  public hasBalance: boolean = false;\r\n  public showEditBalanceInput: boolean = false;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public aRoute: ActivatedRoute,\r\n    public clientService: ClientService,\r\n    public flashMessagesService: FlashMessagesService,\r\n    public confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //Get ID\r\n    this.id = this.aRoute.snapshot.params['id'];\r\n\r\n    //Get Client by Id\r\n    this.clientService.getClientById(this.id).subscribe(\r\n      (data: any): void => {\r\n        if(data.client.balance > 0) {\r\n          this.hasBalance = true;\r\n        } else {\r\n          this.hasBalance = false;\r\n        }\r\n        this.client = data.client;\r\n      }\r\n    )\r\n    //Context Menu\r\n    this.buttonItems = [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'fa-wrench',\r\n        command: () => {\r\n          this.router.navigate(['/edit/'+this.id]);\r\n        }\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'fa-close',\r\n        command: () => {\r\n          this.confirmationService.confirm({\r\n            message: 'Are you sure you want to delete \"'+this.id+'\" ?',\r\n            accept: () => {\r\n              this.clientService.deleteClient(this.id).subscribe(\r\n                (data: any): void => {\r\n                  if(data.success) {\r\n                    this.flashMessagesService.show(\r\n                      'Client Deleted',\r\n                      {\r\n                        cssClass: 'ui-messages-info',\r\n                        timeout: 3000\r\n                      }\r\n                    );\r\n                    this.router.navigate(['/']);\r\n                  } else {\r\n                    this.flashMessagesService.show(\r\n                      data.msg,\r\n                      {\r\n                        cssClass: 'ui-messages-warn',\r\n                        timeout: 3000\r\n                      }\r\n                    );\r\n                    this.router.navigate(['/client/'+this.id]);\r\n                  }\r\n                }\r\n              );\r\n            }\r\n          });\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  updateBalance(id: string) {\r\n    this.clientService.updateClient(this.id, this.client).subscribe(\r\n      (data: any): void => {\r\n        if(data.success) {\r\n          this.flashMessagesService.show(\r\n            'Balance Updated',\r\n            {\r\n              cssClass: 'ui-messages-info',\r\n              timeout: 3000\r\n            }\r\n          );\r\n          this.router.navigate(['/client/'+this.id]);\r\n        } else {\r\n          this.flashMessagesService.show(\r\n            'Balance Update Failed',\r\n            {\r\n              cssClass: 'ui-messages-danger',\r\n              timeout: 3000\r\n            }\r\n          );\r\n          this.router.navigate(['/client/'+this.id]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/client-detail/client-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/clients/clients.component.css\n// module id = ../../../../../src/app/components/clients/clients.component.css\n// module chunks = 1","module.exports = \"<!--Confirmation Dialog -->\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\"></p-confirmDialog>\\r\\n\\r\\n<div class=\\\"ui-grid-row\\\">\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    <h2><i class=\\\"fa fa-users\\\"></i> Clients</h2>\\r\\n  </div>\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    <h5 class=\\\"pull-right text-muted\\\">Total Owed: {{totalOwed | currency:'USD':true}}</h5>\\r\\n  </div>\\r\\n</div>\\r\\n<hr>\\r\\n\\r\\n<p-dataTable \\r\\n  [value]=\\\"clients\\\" \\r\\n  [responsive]=\\\"true\\\"\\r\\n  selectionMode=\\\"single\\\" \\r\\n  [(selection)]=\\\"selectedClient\\\" \\r\\n  (onRowSelect)=\\\"onRowSelect($event)\\\"\\r\\n  *ngIf=\\\"clients?.length > 0;else noClients\\\"\\r\\n>\\r\\n  <p-column field=\\\"_id\\\" header=\\\"ID\\\" [style]=\\\"{'width':'25%'}\\\"></p-column>\\r\\n  <p-column header=\\\"Name\\\" [style]=\\\"{'width':'15%'}\\\">\\r\\n    <ng-template let-client=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n      <span>{{client.firstName}} {{client.lastName}}</span>\\r\\n    </ng-template>\\r\\n  </p-column>\\r\\n  <p-column field=\\\"email\\\" header=\\\"Email\\\" [style]=\\\"{'width':'25%'}\\\"></p-column>\\r\\n  <p-column field=\\\"phone\\\" header=\\\"Phone\\\" [style]=\\\"{'width':'15%'}\\\"></p-column>\\r\\n  <p-column header=\\\"Balance\\\" [style]=\\\"{'width':'10%'}\\\">\\r\\n    <ng-template let-col let-client=\\\"rowData\\\" pTemplate=\\\"body\\\">\\r\\n      <span>{{client.balance | currency:'USD':true}}</span>\\r\\n    </ng-template>\\r\\n  </p-column>\\r\\n  <p-footer>\\r\\n    Total clients: {{clients.length}} \\r\\n  </p-footer>\\r\\n  <ng-template #noClients>\\r\\n    <p-footer>\\r\\n      There are no clients in the system.\\r\\n    </p-footer>\\r\\n  </ng-template>\\r\\n</p-dataTable>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/clients/clients.component.html\n// module id = ../../../../../src/app/components/clients/clients.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { ClientService } from '../../services/client.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/primeng';\r\n\r\nimport { Client } from '../../models/client';\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.css']\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n\r\n  public clients: Array<Client> = [];\r\n  public totalOwed: number = 0;\r\n  public selectedClient: Client;\r\n\r\n  constructor(\r\n    public clientService: ClientService,\r\n    public router: Router,\r\n    public confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.clientService.getClients().subscribe(\r\n      (data: any) => {\r\n        this.clients = data.clients;\r\n        //To have the first row selected onInit:\r\n        //this.selectedClient = this.clients[0];\r\n        this.getTotal();\r\n      }\r\n    );\r\n  }\r\n\r\n  getTotal() {\r\n    let total: number = 0;\r\n    for(let i = 0; i < this.clients.length; i++) {\r\n      total += this.clients[i].balance;\r\n    }\r\n\r\n    this.totalOwed = total;\r\n  }\r\n\r\n  onRowSelect(event) {\r\n    this.confirmationService.confirm({\r\n      message: 'View details of \"'+event.data._id + '\" ?',\r\n      accept: () => {\r\n        this.router.navigate(['/client/'+event.data._id]);\r\n      }\r\n     });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/clients/clients.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"ui-grid-row\\\">\\r\\n  <div class=\\\"ui-grid-col-10 ui-sm-12\\\">\\r\\n    <app-clients></app-clients>\\r\\n  </div>\\r\\n  <div class=\\\"ui-grid-col-2 ui-sm-12\\\">\\r\\n    <app-sidebar></app-sidebar>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpService } from \"../../services/http.service\";\r\n\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  \r\n  public user: User;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public httpService: HttpService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n     this.authService.getProfile().subscribe(\r\n       (profile: any): void => {\r\n\r\n         this.user = profile.user;\r\n       },\r\n       (err: Error): void => {\r\n         console.log(err);\r\n       }\r\n     )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"::ng-deep .ui-messages {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: 3px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.css\n// module id = ../../../../../src/app/components/edit-client/edit-client.component.css\n// module chunks = 1","module.exports = \"<!--Confirmation Dialog -->\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\"></p-confirmDialog>\\r\\n\\r\\n<div class=\\\"ui-grid-row\\\">\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    <button pButton type=\\\"button\\\" class=\\\"ui-button-info\\\" label=\\\"Back To Client Details\\\" icon=\\\"fa-arrow-circle-o-left\\\" iconPos=\\\"left\\\" (click)=\\\"onClick()\\\"></button>\\r\\n  </div>\\r\\n  <div class=\\\"ui-grid-col-6\\\">\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<form\\r\\n*ngIf=\\\"client\\\"\\r\\n[formGroup]=\\\"editClientForm\\\"\\r\\n(ngSubmit)=\\\"onEditSubmit(editClientForm.value)\\\"\\r\\n>\\r\\n<p-panel header=\\\"Edit Client\\\">\\r\\n  <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        First Name *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"firstName\\\"\\r\\n          [(ngModel)]=\\\"client.firstName\\\"\\r\\n          placeholder=\\\"Required\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!editClientForm.controls['firstName'].valid && editClientForm.controls['firstName'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"editClientForm.controls['firstName'].errors['required']\\\">This field is required</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Last Name *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"lastName\\\"\\r\\n          [(ngModel)]=\\\"client.lastName\\\"\\r\\n          placeholder=\\\"Required\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!editClientForm.controls['lastName'].valid && editClientForm.controls['lastName'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"editClientForm.controls['lastName'].errors['required']\\\">This field is required</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Phone *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <p-inputMask \\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"phone\\\"\\r\\n          [(ngModel)]=\\\"client.phone\\\"\\r\\n          placeholder=\\\"999-999-9999\\\"\\r\\n          mask=\\\"999-999-9999\\\"\\r\\n        >\\r\\n        </p-inputMask>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!editClientForm.controls['phone'].valid && editClientForm.controls['phone'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"editClientForm.controls['phone'].errors['required']\\\">This field is required</span>\\r\\n          <span *ngIf=\\\"editClientForm.controls['phone'].errors['pattern']\\\">Please enter a valid phone number</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Email *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"text\\\"\\r\\n          formControlName=\\\"email\\\"\\r\\n          [(ngModel)]=\\\"client.email\\\"\\r\\n          placeholder=\\\"Required\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!editClientForm.controls['email'].valid && editClientForm.controls['email'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"editClientForm.controls['email'].errors['required']\\\">This field is required</span>\\r\\n          <span *ngIf=\\\"editClientForm.controls['email'].errors['pattern']\\\">Please enter a valid email</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\">\\r\\n        Balance *:\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n        <input \\r\\n          pInputText\\r\\n          type=\\\"number\\\"\\r\\n          formControlName=\\\"balance\\\"\\r\\n          [(ngModel)]=\\\"client.balance\\\"\\r\\n          placeholder=\\\"required\\\"\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-col-4\\\">\\r\\n        <div \\r\\n          class=\\\"ui-messages ui-messages-error ui-corner-all\\\"\\r\\n          *ngIf=\\\"!editClientForm.controls['balance'].valid && editClientForm.controls['firstName'].dirty\\\" \\r\\n        >\\r\\n          <i class=\\\"fa fa-close\\\"></i>\\r\\n          <span *ngIf=\\\"editClientForm.controls['balance'].errors['required']\\\">This field is required</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-row\\\">\\r\\n      <div class=\\\"ui-grid-col-2\\\"></div>\\r\\n      <div class=\\\"ui-grid-col-6\\\">\\r\\n          <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!editClientForm.valid\\\"></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</p-panel>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.html\n// module id = ../../../../../src/app/components/edit-client/edit-client.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MenuItem, ConfirmationService } from 'primeng/primeng';\r\nimport { ClientService } from '../../services/client.service';\r\nimport { Client } from '../../models/client';\r\nimport { FlashMessagesService} from 'angular2-flash-messages';\r\nimport { Validators,FormControl,FormGroup,FormBuilder } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-client',\r\n  templateUrl: './edit-client.component.html',\r\n  styleUrls: ['./edit-client.component.css']\r\n})\r\nexport class EditClientComponent implements OnInit {\r\n  public id: string;\r\n  public client: Client;\r\n  public editClientForm: FormGroup;\r\n  public emailRegex: string = \"[^ @]*@[^ @]*\";\r\n  public phoneRegex: string = \"[1-9]{3}-[0-9]{3}-[0-9]{4}\";\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public aRoute: ActivatedRoute,\r\n    public clientService: ClientService,\r\n    public flashMessagesService: FlashMessagesService,\r\n    public confirmationService: ConfirmationService,\r\n    public fB: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.aRoute.snapshot.params['id'];\r\n    this.clientService.getClientById(this.id).subscribe(\r\n      (data: any): void => {\r\n        this.client = data.client;\r\n      }\r\n    );\r\n\r\n    this.editClientForm = this.fB.group({\r\n      'firstName': new FormControl('', Validators.required),\r\n      'lastName': new FormControl('', Validators.required),\r\n      'phone': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(this.phoneRegex)\r\n      ])),\r\n      'email': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(this.emailRegex)\r\n      ])),\r\n      'balance': new FormControl(0, Validators.required)\r\n    });\r\n\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate(['/client/'+this.id]);\r\n  }\r\n\r\n  onEditSubmit(value) {\r\n    this.client = value;\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure to edit this client?',\r\n      accept: () => {\r\n        this.clientService.updateClient(this.id, this.client).subscribe(\r\n          (data: any): void => {\r\n            if(data.success) {\r\n              this.flashMessagesService.show(\r\n                'Client Updated',\r\n                {\r\n                  cssClass: 'ui-messages-info',\r\n                  timeout: 3000\r\n                }\r\n              );\r\n              this.router.navigate(['/client/'+this.id]);\r\n            } else {\r\n              this.flashMessagesService.show(\r\n                'Client Update Failed',\r\n                {\r\n                  cssClass: 'ui-messages-danger',\r\n                  timeout: 3000\r\n                }\r\n              );\r\n              this.router.navigate(['/edit/'+this.id]);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/edit-client/edit-client.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n  <div class=\\\"ui-grid-row\\\">\\r\\n    <div class=\\\"ui-grid-col-3\\\"></div>\\r\\n    <div class=\\\"ui-grid-col-6\\\">\\r\\n      <p-growl [value]=\\\"loginMessages\\\" styleClass=\\\"loginGrowl\\\"></p-growl>\\r\\n      <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <p-panel header=\\\"Login\\\" styleClass=\\\"loginPanel\\\">\\r\\n          <div class=\\\"ui-grid-row\\\">\\r\\n            Email:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-row\\\">\\r\\n            <input\\r\\n              pInputText \\r\\n              type=\\\"email\\\" \\r\\n              name=\\\"email\\\"\\r\\n              [(ngModel)]=\\\"email\\\" \\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-row\\\">\\r\\n            Password:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-row\\\">\\r\\n            <input\\r\\n              pInputText \\r\\n              type=\\\"password\\\" \\r\\n              name=\\\"password\\\"\\r\\n              [(ngModel)]=\\\"password\\\" \\r\\n            >\\r\\n          </div>\\r\\n          <p-footer>\\r\\n            <button pButton type=\\\"submit\\\" label=\\\"Submit\\\"></button>\\r\\n          </p-footer>\\r\\n        </p-panel>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"ui-grid-col-3\\\"></div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { Message } from 'primeng/primeng';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public email: string = '';\r\n  public password: string = '';\r\n\r\n  public loginMessages: Array<Message> = [];\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public httpService: HttpService,\r\n    public router: Router,\r\n    public flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit(): void{\r\n    const user = {\r\n      email: this.email,\r\n      password: this.password\r\n    };\r\n\r\n    \r\n    this.authService.authenticateUser(user).subscribe(\r\n      (data: any): void => {\r\n          if(data.success) {\r\n            this.authService.storeUserData(data.token, data.user);\r\n            this.flashMessagesService.show('You are logged in', {\r\n              cssClass: 'ui-messages-info',\r\n              timeout: 3000\r\n            });\r\n            this.router.navigate(['/']);\r\n          } else {\r\n            this.loginMessages = [];\r\n            this.loginMessages.push({\r\n              severity: 'error',\r\n              summary: 'Login Error',\r\n              detail: data.msg \r\n            });\r\n            this.router.navigate(['/login']);\r\n          }\r\n      },\r\n      (err: Error): void => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = 1","module.exports = \"<p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\" styleClass=\\\"navMenu\\\"></p-menu>\\r\\n\\r\\n<!--Confirmation Dialog -->\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" key=\\\"navConfirm\\\" icon=\\\"fa fa-question-circle\\\"></p-confirmDialog>\\r\\n\\r\\n<!--Navbar-->\\r\\n<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">ClientPanel</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Dashboard</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/upload']\\\">Upload</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n        <li *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" id=\\\"welcomeText\\\" style=\\\"cursor: pointer\\\">Welcome, {{authService.currentUser?.name}}</a>\\r\\n        </li>\\r\\n        <!-- <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" id=\\\"welcomeText\\\" (click)=\\\"onLogoutClick()\\\" style=\\\"cursor: pointer\\\">Logout</a>\\r\\n        </li> -->\\r\\n        <li *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" (click)=\\\"menu.toggle($event)\\\" style=\\\"cursor: pointer\\\"><i class=\\\"fa fa-user-circle-o\\\"></i></a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br><br>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MenuItem, ConfirmationService } from \"primeng/primeng\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  \r\n  public items: Array<MenuItem> = [];\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    public flashMessagesService: FlashMessagesService,\r\n    public confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      {\r\n        label: 'Manage',\r\n        items: [\r\n          {\r\n              label: 'Change Password', \r\n              icon: 'fa-wrench',\r\n              command: (event: any): void => {\r\n                this.router.navigate(['/password/'])\r\n              }\r\n          },\r\n          {\r\n              label: 'Log out',\r\n              icon: 'fa-minus',\r\n              command: (event: any): void => {\r\n                  this.onLogoutClick();\r\n              }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure to log out?',\r\n      key: \"navConfirm\",\r\n      accept: () => {\r\n        this.authService.logout();\r\n        this.flashMessagesService.show('Logged out', {\r\n          cssClass: 'ui-messages-info',\r\n          timeout: 3000\r\n        });\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n    // this.authService.logout();\r\n    // this.flashMessagesService.show('Logged out', {\r\n    //   cssClass: 'ui-messages-info',\r\n    //   timeout: 3000\r\n    // });\r\n    // this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.css\n// module id = ../../../../../src/app/components/page-not-found/page-not-found.component.css\n// module chunks = 1","module.exports = \"<h2>\\n  PAGE NOT FOUND\\n</h2>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/components/page-not-found/page-not-found.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/page-not-found/page-not-found.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card-block{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n::ng-deep .ui-messages {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n#checkValid .fa {\\r\\n    color: green;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = 1","module.exports = \"<p-growl [value]=\\\"registerMessages\\\" styleClass=\\\"registerGrowl\\\"></p-growl>\\r\\n<form \\r\\n  [formGroup]=\\\"userForm\\\"\\r\\n  (ngSubmit)=\\\"onRegisterSubmit(userForm.value)\\\"\\r\\n>\\r\\n  <p-panel header=\\\"Register\\\">\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\">\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Name *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input\\r\\n            pInputText \\r\\n            type=\\\"text\\\" \\r\\n            formControlName=\\\"name\\\"\\r\\n            placeholder=\\\"Required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div class=\\\"ui-messages ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userForm.controls['name'].valid && userForm.controls['name'].dirty\\\">\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"userForm.controls['name'].errors['required']\\\">Name is required</span>\\r\\n            <span *ngIf=\\\"userForm.controls['name'].errors['minlength']\\\">Must be at least 6 characters</span>\\r\\n          </div>\\r\\n          <div id=\\\"checkValid\\\" *ngIf=\\\"userForm.controls['name'].valid\\\">\\r\\n            <i class=\\\"fa fa-check-circle-o fa-2x\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n        <div class=\\\"ui-grid-col-2\\\">\\r\\n          Email *:\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-6\\\">\\r\\n          <input\\r\\n            pInputText \\r\\n            type=\\\"email\\\" \\r\\n            formControlName=\\\"email\\\"\\r\\n            placeholder=\\\"Required\\\"\\r\\n          >\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-col-4\\\">\\r\\n          <div class=\\\"ui-messages ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userForm.controls['email'].valid && userForm.controls['email'].dirty\\\">\\r\\n            <i class=\\\"fa fa-close\\\"></i>\\r\\n            <span *ngIf=\\\"userForm.controls['email'].errors['required']\\\">Email is required</span>\\r\\n            <span *ngIf=\\\"userForm.controls['email'].errors['pattern']\\\">Must be in valid email format</span>\\r\\n          </div>\\r\\n          <div id=\\\"checkValid\\\" *ngIf=\\\"userForm.controls['email'].valid\\\">\\r\\n            <i class=\\\"fa fa-check-circle-o fa-2x\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\">\\r\\n            Password *:\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-6\\\">\\r\\n            <input\\r\\n              pInputText \\r\\n              type=\\\"password\\\" \\r\\n              formControlName=\\\"password\\\"\\r\\n              placeholder=\\\"Required - Min(6)\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-4\\\">\\r\\n            <div class=\\\"ui-messages ui-messages-error ui-corner-all\\\" *ngIf=\\\"!userForm.controls['password'].valid && userForm.controls['password'].dirty\\\">\\r\\n              <i class=\\\"fa fa-close\\\"></i>\\r\\n              <span *ngIf=\\\"userForm.controls['password'].errors['required']\\\">Password is required</span>\\r\\n              <span *ngIf=\\\"userForm.controls['password'].errors['minlength']\\\">Must be at least 6 characters</span>\\r\\n            </div>\\r\\n            <div id=\\\"checkValid\\\" *ngIf=\\\"userForm.controls['password'].valid\\\">\\r\\n              <i class=\\\"fa fa-check-circle-o fa-2x\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-2\\\"></div>\\r\\n          <div class=\\\"ui-grid-col-6\\\">\\r\\n              <button pButton type=\\\"submit\\\" label=\\\"Submit\\\" [disabled]=\\\"!userForm.valid\\\"></button>\\r\\n          </div>\\r\\n          <div id=\\\"checkValid\\\" class=\\\"ui-grid-col-4\\\" *ngIf=\\\"userForm.valid\\\">\\r\\n            <i class=\\\"fa fa-check-circle-o fa-2x\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </p-panel>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Register User\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <form \\r\\n      [formGroup]=\\\"userForm\\\"\\r\\n      (ngSubmit)=\\\"onRegisterSubmit(userForm.value)\\\"\\r\\n    >\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input \\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          [(ngModel)]=\\\"user.name\\\"\\r\\n          name=\\\"name\\\"\\r\\n          #userName = \\\"ngModel\\\"\\r\\n          minlength = \\\"10\\\"\\r\\n        >\\r\\n          <div *ngIf=\\\"userName.errors?.minlength && userName.touched\\\" class=\\\"alert alert-secondary\\\">\\r\\n            <small>*Must be at least 10 characters.</small>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email</label>\\r\\n          <input \\r\\n            type=\\\"email\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            [(ngModel)]=\\\"user.email\\\"\\r\\n            name=\\\"email\\\"\\r\\n            #userEmail = \\\"ngModel\\\"\\r\\n            minlength = \\\"10\\\"\\r\\n            required\\r\\n          >\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userEmail.errors?.required && userEmail.touched\\\">\\r\\n              <small>*Email is required.</small>\\r\\n            </div>\\r\\n            <div class=\\\"alert alert-secondary\\\" *ngIf=\\\"userEmail.errors?.minlength && userEmail.touched\\\">\\r\\n              <small>*Must be at least 10 characters.</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input \\r\\n              type=\\\"password\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"user.password\\\"\\r\\n              name=\\\"password\\\"\\r\\n              #userPassword = \\\"ngModel\\\"\\r\\n              minlength = \\\"6\\\"\\r\\n              required\\r\\n            >\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userPassword.errors?.required && userPassword.touched\\\">\\r\\n                <small>*Password is required.</small>\\r\\n              </div>\\r\\n              <div class=\\\"alert alert-secondary\\\" *ngIf=\\\"userPassword.errors?.minlength && userPassword.touched\\\">\\r\\n                <small>*Must be at least 6 characters.</small>\\r\\n              </div>\\r\\n          </div>\\r\\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\r\\n    </form>\\r\\n  </div>\\r\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Validators,FormControl,FormGroup,FormBuilder } from '@angular/forms';\r\nimport { User } from '../../models/user';\r\nimport { Message } from 'primeng/primeng';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public user: User = {\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  };\r\n  public userForm: FormGroup;\r\n  public registerMessages: Array<Message> = [];\r\n  public emailRegex: string = \"[^ @]*@[^ @]*\"\r\n\r\n  constructor(\r\n    public fB: FormBuilder,\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    public flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.fB.group({\r\n      'name': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ])),\r\n      'email': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern(this.emailRegex)\r\n      ])),\r\n      'password': new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6)\r\n      ]))\r\n    });\r\n  }\r\n\r\n  onRegisterSubmit(value) {\r\n    this.user = value;\r\n    this.authService.registerUser(this.user).subscribe(\r\n     (data: any): void => {\r\n       if(data.success) {\r\n         this.flashMessagesService.show('You are registered and now can log in', {\r\n          cssClass: 'ui-messages-info',\r\n          timeout: 3000\r\n         });\r\n         this.router.navigate(['/login']);\r\n       } else {\r\n         this.registerMessages = [];\r\n         this.registerMessages.push({\r\n          severity: 'error',\r\n          summary: 'Register Error',\r\n          detail: 'Failed to register'\r\n         });\r\n         this.router.navigate(['/register']);\r\n       }\r\n     },\r\n     (err: Error): void => {\r\n       console.log(err);\r\n     }\r\n    );\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/register/register.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.css\n// module id = ../../../../../src/app/components/sidebar/sidebar.component.css\n// module chunks = 1","module.exports = \"<button \\r\\n    pButton \\r\\n    type=\\\"button\\\" \\r\\n    class=\\\"ui-button-success\\\" \\r\\n    icon=\\\"fa-plus\\\" \\r\\n    iconPos=\\\"left\\\" \\r\\n    label=\\\"Add Client\\\" \\r\\n    (click)=\\\"onClick()\\\" \\r\\n    id=\\\"addNewButton\\\">\\r\\n</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.html\n// module id = ../../../../../src/app/components/sidebar/sidebar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor(\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate(['/add']);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/sidebar/sidebar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.css\n// module id = ../../../../../src/app/components/upload-client/upload-client.component.css\n// module chunks = 1","module.exports = \"<p-fileUpload name=\\\"myClientFile[]\\\" (onSelect)=\\\"onSelect($event)\\\" \\r\\n        multiple=\\\"multiple\\\" accept=\\\".json\\\" maxFileSize=\\\"1000000\\\"\\r\\n        [showUploadButton]=\\\"false\\\" (onClear)=\\\"onCancelClick()\\\">\\r\\n    <ng-template *ngIf=\\\"hasFile\\\" pTemplate type=\\\"content\\\">\\r\\n        <ul>\\r\\n            <li  *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n        </ul>\\r\\n    </ng-template>        \\r\\n</p-fileUpload>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.html\n// module id = ../../../../../src/app/components/upload-client/upload-client.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload-client',\r\n  templateUrl: './upload-client.component.html',\r\n  styleUrls: ['./upload-client.component.css']\r\n})\r\nexport class UploadClientComponent implements OnInit {\r\n  \r\n  uploadedFiles: Array<any> = [];\r\n  hasFile: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSelect(event) {\r\n    for(let file of event.files) {\r\n      this.uploadedFiles.push(file);\r\n    }\r\n    this.hasFile = true;\r\n  }\r\n\r\n  onCancelClick() {\r\n    this.uploadedFiles.splice(0, this.uploadedFiles.length);\r\n    this.hasFile = false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/components/upload-client/upload-client.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public authService: AuthService\r\n    ) { }\r\n\r\n    canActivate() {\r\n        if(this.authService.isLoggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false\r\n        }\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport \"rxjs/add/operator/map\";\r\nimport { tokenNotExpired } from \"angular2-jwt\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { LocalStorageService } from \"./local-storage.service\";\r\n\r\nimport { User } from '../models/user';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  public authToken: any;\r\n  public user: User;\r\n  public currentUser: User;\r\n\r\n  constructor(\r\n    public httpService: HttpService,\r\n    public localStorageService: LocalStorageService\r\n  ) { }\r\n\r\n  registerUser(user: User): Observable<User> {\r\n    return this.httpService.post('/users/register', user, {'Content-Type':'application/json'});\r\n  };\r\n\r\n  authenticateUser(user: User): Observable<any> {\r\n    return this.httpService.post('/users/authenticate', user, {'Content-Type': 'application/json'});\r\n  };\r\n\r\n  getProfile(): Observable<any> {\r\n    this.loadToken();\r\n    this.loadCurrentUser();\r\n\r\n    return this.httpService.get('/users/profile', {'Authorization': this.authToken});\r\n  };\r\n\r\n  storeUserData(token: any, user: User): void {\r\n    this.localStorageService.saveValueWithKey('id_token', token);\r\n    this.localStorageService.saveValueWithKey('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  };\r\n\r\n  loadToken(): void {\r\n    this.authToken = this.localStorageService.fetchValueFromKey('id_token');\r\n  };\r\n\r\n  loadCurrentUser(): User {\r\n    return this.currentUser = JSON.parse(this.localStorageService.fetchValueFromKey('user'));\r\n  };\r\n\r\n  isLoggedIn(): boolean {\r\n    return tokenNotExpired('id_token');\r\n  };\r\n\r\n  logout(): void {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    this.currentUser = null;\r\n    this.localStorageService.clearAll();\r\n  };\r\n\r\n  changePassword(user: User, candidatePassword: string, newPassword: string): Observable<any> {\r\n    let data = {user, candidatePassword, newPassword}\r\n    return this.httpService.put('/users/password', data, {'Content-Type':'application/json'});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { Client } from '../models/client';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n  public clients: Array<Client> = [];\r\n  public client: Client = {\r\n    _id: ''\r\n  }\r\n\r\n  constructor(\r\n    public httpService: HttpService\r\n  ) { }\r\n\r\n  addClient(client: Client): Observable<any> {\r\n    return this.httpService.post('/clients/addClient', client, {'Content-Type': 'application/json'});\r\n  }\r\n\r\n  getClients(): Observable<any> {\r\n    return this.httpService.get('/clients/clients', {});\r\n  }\r\n\r\n  getClientById(id: string): Observable<any> {\r\n    return this.httpService.get('/clients/client/'+id, {});\r\n  }\r\n\r\n  updateClient(id: string, client: Client): Observable<any> {\r\n    console.log(client);\r\n    return this.httpService.put('/clients/edit/'+id, client, {'Content-Type': 'application/json'});\r\n  }\r\n\r\n  deleteClient(id: string): Observable<any> {\r\n    return this.httpService.delete('/clients/delete/'+id, {});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/services/client.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, RequestOptions, Response } from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  public static host = \"localhost\";\r\n  public static port = 3000;\r\n  public static url = \"http://\" + HttpService.host + \":\" + HttpService.port;  \r\n  \r\n\r\n  constructor(\r\n    public http: Http\r\n  ) { }\r\n\r\n  get (endpoint: string, headersObject: Object): Observable<any> {\r\n        let headers: Headers = new Headers(headersObject);\r\n        let options: RequestOptions = new RequestOptions(\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n\r\n        return this.http.get(HttpService.url + endpoint, options)\r\n            .map(\r\n                (res: Response): Promise<any> => {\r\n                    return res.json();\r\n                }\r\n            );\r\n    };\r\n  \r\n  post(endpoint: string, body: any, headersObject: Object): Observable<any> {\r\n        let headers: Headers = new Headers(headersObject);\r\n        let options: RequestOptions = new RequestOptions(\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n\r\n        console.log(HttpService.url + endpoint);\r\n\r\n        return this.http.post(HttpService.url + endpoint, body, options)\r\n            .map(\r\n                (res: Response): Promise<any> => {\r\n                    return res.json();\r\n                }\r\n            );\r\n    }\r\n\r\n    put(endpoint: string, body: any, headersObject: Object): Observable<any> {\r\n        let headers: Headers = new Headers();\r\n        let options: RequestOptions = new RequestOptions(\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n\r\n        return this.http.put(HttpService.url + endpoint, body, options)\r\n            .map(\r\n                (res: Response): Promise<any> => {\r\n                    return res.json();\r\n                }\r\n            );\r\n    }\r\n\r\n    delete(endpoint: string, headersObject: Object): Observable<any> {\r\n        let headers: Headers = new Headers(headersObject);\r\n        let options: RequestOptions = new RequestOptions(\r\n            {\r\n                headers: headers\r\n            }\r\n        );\r\n\r\n        return this.http.delete(HttpService.url + endpoint, options)\r\n            .map(\r\n                (res: Response): Promise<any> => {\r\n                    return res.json();\r\n                }\r\n            );\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/services/http.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public saveValueWithKey(key: string, value: any): void {\n    localStorage.setItem(key, value);\n  }\n\n  public fetchValueFromKey(key: string): any {\n      return localStorage.getItem(key)\n  }\n\n  public deleteValueWithKey(key: string): void {\n      localStorage.removeItem(key);\n  }\n\n  public clearAll(): void {\n      localStorage.clear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/app/services/local-storage.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Codes/meanclient/angular/src/main.ts"],"sourceRoot":"webpack:///"}